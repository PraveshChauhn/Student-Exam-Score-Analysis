# -*- coding: utf-8 -*-
"""Students Exam Score Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VI_EyHTAtnWJtYBOTWOMmKIpqJHezY61
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Expanded_data_with_more_features.csv")
print(df.head())

df.describe()

df.info()

df.isnull().sum()

"""## **Drop Unnamed Column**"""

df = df.drop("Unnamed: 0", axis=1)
print(df.head())

"""## **Change Weekly Study Hours Column**"""

df["WklyStudyHours"] = df["WklyStudyHours"].str.replace("05-Oct","5-10")
df.head()

"""## **Gender Distribution**"""

plt.figure(figsize=(6,6))
ax = sns.countplot(x="Gender", data=df)
ax.bar_label(ax.containers[0])
plt.title("Gender Distribution")
plt.show()

"""#From the above Chart we have analysed that:
#the number of female in the data is more than the number of males


"""

gd = df.groupby("ParentEduc").agg({"MathScore":"mean", "ReadingScore":"mean", "WritingScore":"mean"})
print(gd)

plt.figure(figsize=(6,6))
sns.heatmap(gd, annot=True)
plt.title("Relationship between Parent's Education and Student's Score")
plt.show()

"""#From the above chart we have concluded that the education of the parents have a good impact on their Scores

"""

gd1 = df.groupby("ParentMaritalStatus").agg({"MathScore":"mean", "ReadingScore":"mean", "WritingScore":"mean"})
print(gd)

plt.figure(figsize=(6,6))
sns.heatmap(gd1, annot=True)
plt.title("Relationship between Parent's Marital Status and Student's Score")
plt.show()

"""#From above chart we have concluded that their is no/negligible impact on the student's score due to their marital status"""

sns.boxplot(x="TestPrep", y="MathScore", data=df)
plt.title("Relationship between Test Prep and Math Score")
plt

sns.boxplot(x="TestPrep", y="WritingScore", data=df)
plt.title("Relationship between Test Prep and WritingScore")
plt

sns.boxplot(x="TestPrep", y="ReadingScore", data=df)
plt.title("Relationship between Test Prep and ReadingScore")
plt

print(df["EthnicGroup"].unique())

"""### **Distribution Of Ethnic Group**"""

groupA = df.loc[(df["EthnicGroup"] == "group A")].count()
groupB = df.loc[(df["EthnicGroup"] == "group B")].count()
groupC = df.loc[(df["EthnicGroup"] == "group C")].count()
groupD = df.loc[(df["EthnicGroup"] == "group D")].count()
groupE = df.loc[(df["EthnicGroup"] == "group E")].count()

mlist = [groupA[0], groupB[0], groupC[0], groupD[0], groupE[0]]
# Check for zero values in mlist
if any(v == 0 for v in mlist):
  # Handle zero values (e.g., remove or replace them)
  mlist = [v for v in mlist if v != 0]
  print("Warning: Some groups have zero values and have been removed from the pie chart.")

print(mlist)
plt.pie(mlist, labels=["Group A", "Group B", "Group C", "Group D", "Group E"], autopct="%1.1f%%")

ax = sns.countplot(x="EthnicGroup", data=df)
ax.bar_label(ax.containers[0])
plt.title("Ethnic Group Distribution")
plt.show()